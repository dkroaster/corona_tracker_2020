{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/Chart/Chart.jsx","App.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","toLocaleTimeString","url","fetchData","country","a","changaleUrl","axios","get","modifiedData","fetchDailyData","console","log","map","dailyData","total","date","reportDate","fetchCn","countries","name","CountryPicker","handleCountryChange","useState","fetchCountries","setfetchCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Chart","setDailyData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","App","state","fetchedData","setState","this","image","src","CoronaImage","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d52354b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__qtSxv\",\"Card\":\"Cards_Card__3lrGc\",\"infected\":\"Cards_infected__2lFcW\",\"recovered\":\"Cards_recovered__3fOTu\",\"deaths\":\"Cards_deaths__kPW5V\"};","import React from 'react';\r\nimport { Card, CardContent , Typography , Grid} from '@material-ui/core';\r\nimport  styles from './Cards.module.css';\r\nimport CountUp from 'react-countup'\r\n\r\nimport cx from 'classnames';\r\n\r\n\r\n\r\nconst Cards = ({data : { confirmed , recovered ,deaths,lastUpdate }}) =>{\r\n    \r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n  \r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid  item component={Card}  xs={12} md={3} className={cx(styles.Card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=','/>\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()} - {new Date(lastUpdate).toLocaleTimeString()}</Typography>\r\n                        <Typography variant='body2'>Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid  item component={Card}  xs={12} md={3}  className={cx(styles.Card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Recoverd</Typography>\r\n                        <Typography variant='h5'> \r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=','/>\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()} - {new Date(lastUpdate).toLocaleTimeString()}</Typography>\r\n                        <Typography variant='body2'>Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid  item component={Card} xs={12} md={3} className={cx(styles.Card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'> \r\n                            <CountUp start={0}  end={deaths.value} duration={2.5} separator=','/>\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()} - {new Date(lastUpdate).toLocaleTimeString()}</Typography>\r\n                        <Typography variant='body2'>Number of deaths due to COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\n\r\nexport const fetchData = async (country)=>{\r\n    let changaleUrl = url;\r\n\r\n    if(country){\r\n        changaleUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try{\r\n            const {data : {confirmed,recovered,deaths,lastUpdate}} = await axios.get(changaleUrl);\r\n\r\n            const modifiedData ={\r\n                confirmed: confirmed,\r\n                recovered: recovered,\r\n                deaths: deaths,\r\n                lastUpdate: lastUpdate,\r\n            }\r\n            return modifiedData;\r\n    }\r\n    catch (error){\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try{\r\n            const {data} = await axios.get('https://covid19.mathdro.id/api/daily');\r\n           \r\n            console.log(data);\r\n            const modifiedData = data.map((dailyData) => ({\r\n                confirmed : dailyData.confirmed.total,\r\n                deaths : dailyData.deaths.total,\r\n                date : dailyData.reportDate\r\n            }))\r\n             return modifiedData;\r\n    }\r\n    catch (error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCn = async ()=>{\r\n    try{\r\n            const {data:{countries}} = await axios.get(`${url}/countries`);\r\n            console.log(countries)\r\n            return countries.map((country)=> country.name);\r\n    }catch(error){\r\n\r\n    }\r\n}","import React,{useState,useEffect} from 'react'\r\n \r\nimport {NativeSelect , FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCn} from '../../api/index.js'\r\n\r\n\r\n\r\n\r\nconst CountryPicker =({handleCountryChange})=>{\r\n\r\n    const [fetchCountries,setfetchCountries] =useState([])\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI= async() =>{\r\n            setfetchCountries( await fetchCn())     \r\n        }\r\n        fetchAPI();\r\n    },[setfetchCountries]);\r\n\r\n    console.log(fetchCountries)\r\n\r\n\r\n\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React,{useState,useEffect} from 'react'\r\nimport {fetchDailyData} from '../../api/index.js'\r\nimport {Line ,Bar } from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css'\r\nimport { rgbToHex } from '@material-ui/core'\r\n\r\nconst Chart= ({data:{confirmed,recovered,deaths},country}) => {\r\n\r\n  const [dailyData,setDailyData] = useState([]);\r\n\r\n\r\n  useEffect(() =>{\r\n    \r\n    const fetchAPI= async ()=>{\r\n        setDailyData(await fetchDailyData());\r\n    }\r\n    fetchAPI();\r\n  },[]);\r\n\r\n  const lineChart = (\r\n    dailyData.length ?\r\n    (<Line\r\n      data={{\r\n          labels: dailyData.map(({date})=>date),\r\n          datasets:[{ \r\n            data : dailyData.map(({ confirmed }) => confirmed),\r\n            label:'Infected',\r\n            borderColor : '#3333ff',\r\n            fill : true,\r\n          },{\r\n            data : dailyData.map(({ deaths }) => deaths),\r\n            label:'Deaths',\r\n            borderColor : 'red',\r\n            backgroundColor: 'rgba(255,0,0,0.5)',\r\n            fill : true,\r\n          }],\r\n      }}    \r\n    />)  : null\r\n  );\r\n  \r\n\r\n  const barChart = (\r\n    confirmed\r\n      ? (\r\n        <Bar\r\n          data={{\r\n            labels : ['Infected','Recovered','Deaths'],\r\n            datasets : [{\r\n              label:'People',\r\n              backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(250,0,0,0.5)'],\r\n              data:[confirmed.value,recovered.value,deaths.value]\r\n            }]\r\n          }}\r\n        \r\n          options={{\r\n            legend: {display:false},\r\n            title: {display:true, text: `Current State in ${country}`}\r\n\r\n          }}\r\n        />\r\n      ) : null\r\n  )\r\n\r\n\r\n  return(\r\n    <div className={styles.container}>\r\n      {country ? barChart :lineChart}\r\n    </div>\r\n   )\r\n  }\r\n\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Cards from './components/Cards/Cards';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport Chart from './components/Chart/Chart';\r\nimport {fetchData} from './api'\r\n\r\nimport styles from './App.module.css'\r\nimport CoronaImage from '../src/images/image.png'\r\n\r\nclass App extends React.Component{\r\n\r\n    state={\r\n        data: {},\r\n        country:''\r\n    }\r\n\r\n     async componentDidMount(){\r\n        const fetchedData =  await fetchData();\r\n        this.setState({ data : fetchedData})\r\n    }\r\n\r\n    handleCountryChange = async (country) =>{\r\n        const fetchedData =  await fetchData(country);\r\n        this.setState({ data : fetchedData , country : country})\r\n        console.log(country)\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        const {data,country} = this.state;\r\n        \r\n\r\n        return(\r\n\r\n            <div className={styles.container}>\r\n                <img  className={styles.image} src={CoronaImage}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Cards data={data}/>\r\n                <Chart data={data} country={country}></Chart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__35K5V\",\"image\":\"App_image__1mkMN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1fyx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2HzIT\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}